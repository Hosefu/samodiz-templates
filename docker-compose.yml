version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    environment:
      - VITE_API_URL=http://localhost/api
      - VITE_STORAGE_URL=http://localhost/storage
      - VITE_PDF_URL=http://localhost/pdf
      - VITE_PNG_URL=http://localhost/png
    volumes:
      - ./frontend:/app
      - /app/node_modules

  storage-service:
    build:
      context: ./storage
      dockerfile: Dockerfile
    container_name: storage-service
    env_file:
      - .env
    volumes:
      - media_data:/app/media
      - static_data:/app/staticfiles
      - ./storage/media:/usr/share/nginx/html/media:ro
    expose:
      - "${STORAGE_PORT:-8000}"
    command: >
      sh -c "
        mkdir -p /app/media/generated_templates &&
        chmod 777 /app/media/generated_templates &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn storage.wsgi:application --bind 0.0.0.0:${STORAGE_PORT:-8000}
      "
    environment:
      - API_KEY=development-api-key
      - DJANGO_DEBUG=True
      - STORAGE_PORT=${STORAGE_PORT:-8000}
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:${STORAGE_PORT:-8000}/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  render-routing-service:
    build:
      context: ./render-routing
      dockerfile: Dockerfile
    container_name: render-routing-service
    env_file:
      - .env
    expose:
      - "${ROUTING_PORT:-8080}"
    depends_on:
      storage-service:
        condition: service_healthy
      pdf-renderer:
        condition: service_healthy
      png-renderer:
        condition: service_healthy
      template-service:
        condition: service_healthy
    environment:
      - SERVER_PORT=${ROUTING_PORT:-8080}
      - RENDERERS_PDF_RENDERER=http://pdf-renderer:${PDF_PORT:-8081}/api/pdf/render
      - RENDERERS_PNG_RENDERER=http://png-renderer:${PNG_PORT:-8082}/api/png/render
      - STORAGE_API_BASE_URL=http://storage-service:${STORAGE_PORT:-8000}/api
      - STORAGE_API_KEY=development-api-key
      - LOGGER_LEVEL=info
      - TEMPLATE_SERVICE_URL=http://template-service:8083/api/template/render
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:${ROUTING_PORT:-8080}/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  pdf-renderer:
    build:
      context: ./pdf-renderer
      dockerfile: Dockerfile
    container_name: pdf-renderer
    env_file:
      - .env
    volumes:
      - pdf_data:/app/wwwroot
    expose:
      - "${PDF_PORT:-8081}"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:${PDF_PORT:-8081}
      - Logging__LogLevel__Default=Debug
      - Logging__LogLevel__PdfRenderer=Debug
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:${PDF_PORT:-8081}/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  png-renderer:
    build:
      context: ./png-renderer
      dockerfile: Dockerfile
    container_name: png-renderer
    env_file:
      - .env
    volumes:
      - png_data:/app/output
    expose:
      - "${PNG_PORT:-8082}"
    environment:
      - PNG_RENDERER_HOST=0.0.0.0
      - PNG_RENDERER_PORT=${PNG_PORT:-8082}
      - PNG_RENDERER_LOG_LEVEL=INFO
      - PNG_RENDERER_CACHE_ENABLED=True
      - PNG_RENDERER_BROWSER_HEADLESS=True
      - PNG_RENDERER_MAX_CONCURRENT_BROWSERS=5
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:${PNG_PORT:-8082}/api/png/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  template-service:
    build:
      context: ./template-service
      dockerfile: Dockerfile
    container_name: template-service
    env_file:
      - .env
    volumes:
      - ./template-service:/app
    expose:
      - "8083"
    environment:
      - TEMPLATE_SERVICE_HOST=0.0.0.0
      - TEMPLATE_SERVICE_PORT=8083
      - TEMPLATE_SERVICE_LOG_LEVEL=INFO
      - TEMPLATE_SERVICE_DEBUG=False
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8083/api/template/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s 

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports:
      - "80:80"
    depends_on:
      frontend:
        condition: service_started
      storage-service:
        condition: service_healthy
      render-routing-service:
        condition: service_healthy
      pdf-renderer:
        condition: service_healthy
      png-renderer:
        condition: service_healthy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_data:/usr/share/nginx/html/static:ro
      - media_data:/usr/share/nginx/html/media:ro
      - pdf_data:/usr/share/nginx/html/pdfs:ro
      - png_data:/usr/share/nginx/html/images:ro

volumes:
  media_data:
  static_data:
  pdf_data:
  png_data: