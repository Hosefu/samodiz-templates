version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    volumes:
      - ./backend:/app
      - storage_data:/app/storage
      - static_data:/app/staticfiles
    expose:
      - "${BACKEND_PORT}"
    environment:
      - DEBUG=1
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:${BACKEND_PORT}/api/health/"]
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  pdf-renderer:
    build:
      context: ./pdf-renderer
      dockerfile: Dockerfile
    container_name: pdf-renderer
    expose:
      - "${PDF_PORT}"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:${PDF_PORT}/health"]
      interval: 5s
      timeout: 5s
      retries: 5

  png-renderer:
    build:
      context: ./png-renderer
      dockerfile: Dockerfile
    container_name: png-renderer
    expose:
      - "${PNG_PORT}"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:${PNG_PORT}/health"]
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_data:/usr/share/nginx/html/static
      - media_data:/usr/share/nginx/html/media
    ports:
      - "80:80"
    depends_on:
      - backend
      - pdf-renderer
      - png-renderer

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    environment:
      - VITE_API_URL=http://localhost:${BACKEND_PORT}
    depends_on:
      - backend

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: celery
    command: celery -A core worker -l INFO
    volumes:
      - ./backend:/app
    environment:
      - DEBUG=1
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - backend
      - redis

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: celery-beat
    command: celery -A core beat -l INFO
    volumes:
      - ./backend:/app
    environment:
      - DEBUG=1
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - backend
      - redis

volumes:
  postgres_data:
  redis_data:
  storage_data:
  static_data:
  media_data: