# Generated by Django 4.2.8 on 2025-05-07 16:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Format',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(help_text='Название формата (`pdf`, `png`)', max_length=50, unique=True)),
                ('description', models.TextField(blank=True, help_text='Описание формата')),
                ('render_url', models.URLField(help_text='Внутренний URL генератора')),
            ],
            options={
                'verbose_name': 'Формат',
                'verbose_name_plural': 'Форматы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FormatSetting',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(help_text='Название настройки', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Описание')),
                ('key', models.CharField(help_text='Ключ', max_length=50)),
                ('is_required', models.BooleanField(default=False, help_text='Обязательна?')),
                ('default_value', models.CharField(blank=True, help_text='Значение по умолчанию', max_length=255, null=True)),
                ('format', models.ForeignKey(help_text='Для какого формата', on_delete=django.db.models.deletion.CASCADE, related_name='expected_settings', to='templates.format')),
            ],
            options={
                'verbose_name': 'Настройка формата',
                'verbose_name_plural': 'Настройки форматов',
                'ordering': ['format', 'name'],
                'unique_together': {('format', 'key')},
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('key', models.CharField(help_text='Значение единицы измерения (например `mm`, `px`)', max_length=10, unique=True)),
                ('name', models.CharField(help_text='Подпись в UI (`мм`)', max_length=50)),
            ],
            options={
                'verbose_name': 'Единица измерения',
                'verbose_name_plural': 'Единицы измерения',
                'ordering': ['key'],
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(help_text='Название шаблона', max_length=255)),
                ('is_public', models.BooleanField(default=False, help_text='Опубликовано?')),
                ('description', models.TextField(blank=True, help_text='Описание шаблона')),
                ('html', models.TextField(blank=True, help_text='HTML-код шаблона')),
                ('format', models.ForeignKey(help_text='Формат шаблона', on_delete=django.db.models.deletion.PROTECT, related_name='templates', to='templates.format')),
                ('owner', models.ForeignKey(help_text='Владелец шаблона', on_delete=django.db.models.deletion.CASCADE, related_name='templates', to=settings.AUTH_USER_MODEL)),
                ('unit', models.ForeignKey(help_text='Единица измерения для шаблона', on_delete=django.db.models.deletion.PROTECT, related_name='templates', to='templates.unit')),
            ],
            options={
                'verbose_name': 'Шаблон',
                'verbose_name_plural': 'Шаблоны',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('index', models.PositiveIntegerField(help_text='Порядковый номер (1…)')),
                ('html', models.TextField(help_text='HTML-код страницы')),
                ('width', models.DecimalField(decimal_places=2, help_text='Ширина страницы', max_digits=10)),
                ('height', models.DecimalField(decimal_places=2, help_text='Высота страницы', max_digits=10)),
                ('template', models.ForeignKey(help_text='Родительский шаблон', on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='templates.template')),
            ],
            options={
                'verbose_name': 'Страница',
                'verbose_name_plural': 'Страницы',
                'ordering': ['template', 'index'],
                'unique_together': {('template', 'index')},
            },
        ),
        migrations.AddField(
            model_name='format',
            name='allowed_units',
            field=models.ManyToManyField(help_text='Разрешённые единицы измерения', related_name='formats', to='templates.unit'),
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(help_text='Имя файла', max_length=255)),
                ('file', models.CharField(help_text='URL в Ceph', max_length=1000)),
                ('size_bytes', models.BigIntegerField(help_text='Размер в байтах')),
                ('mime_type', models.CharField(help_text='MIME-тип файла', max_length=100)),
                ('page', models.ForeignKey(blank=True, help_text='NULL → глобальный ассет', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='templates.page')),
                ('template', models.ForeignKey(help_text='Шаблон', on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='templates.template')),
            ],
            options={
                'verbose_name': 'Ассет',
                'verbose_name_plural': 'Ассеты',
                'ordering': ['template', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TemplateRevision',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('number', models.PositiveIntegerField(help_text='Номер ревизии (1, 2, …)')),
                ('changelog', models.TextField(blank=True, help_text='Описание изменений')),
                ('html', models.TextField(help_text='Замороженный HTML этой версии')),
                ('author', models.ForeignKey(help_text='Кто внёс изменения', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='template_revisions', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(help_text='Родительский шаблон', on_delete=django.db.models.deletion.CASCADE, related_name='revisions', to='templates.template')),
            ],
            options={
                'verbose_name': 'Ревизия шаблона',
                'verbose_name_plural': 'Ревизии шаблонов',
                'ordering': ['-number'],
                'unique_together': {('template', 'number')},
            },
        ),
        migrations.CreateModel(
            name='TemplatePermission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('role', models.CharField(choices=[('viewer', 'Просмотр'), ('editor', 'Редактирование'), ('owner', 'Владелец')], default='viewer', help_text='Уровень доступа', max_length=10)),
                ('token', models.UUIDField(blank=True, default=uuid.uuid4, help_text='Публичный токен (если grantee=NULL)', null=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='Срок действия ссылки', null=True)),
                ('grantee', models.ForeignKey(blank=True, help_text='Кому выдано (NULL → публичная ссылка)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='template_permissions', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(help_text='Шаблон', on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to='templates.template')),
            ],
            options={
                'verbose_name': 'Разрешение на шаблон',
                'verbose_name_plural': 'Разрешения на шаблоны',
                'ordering': ['template', 'role'],
                'unique_together': {('template', 'grantee')},
            },
        ),
        migrations.CreateModel(
            name='PageSettings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('value', models.CharField(help_text='Значение для этой страницы', max_length=255)),
                ('format_setting', models.ForeignKey(help_text='Какая настройка', on_delete=django.db.models.deletion.CASCADE, related_name='page_settings', to='templates.formatsetting')),
                ('page', models.ForeignKey(help_text='Страница', on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='templates.page')),
            ],
            options={
                'verbose_name': 'Настройка страницы',
                'verbose_name_plural': 'Настройки страниц',
                'ordering': ['page', 'format_setting'],
                'unique_together': {('page', 'format_setting')},
            },
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('key', models.CharField(help_text='Тех. имя для вставки', max_length=100)),
                ('label', models.CharField(help_text='Подпись в UI', max_length=255)),
                ('is_required', models.BooleanField(default=False, help_text='Обязательное? (DEF=False)')),
                ('default_value', models.CharField(blank=True, help_text='Значение по умолчанию', max_length=255, null=True)),
                ('is_choices', models.BooleanField(default=False, help_text='Является списком выбора?')),
                ('choices', models.JSONField(blank=True, help_text='Перечень вариантов в формате [{"value": "...", "label": "..."}]', null=True)),
                ('page', models.ForeignKey(blank=True, help_text='NULL → глобальное поле', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='templates.page')),
                ('template', models.ForeignKey(help_text='Шаблон', on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='templates.template')),
            ],
            options={
                'verbose_name': 'Поле шаблона',
                'verbose_name_plural': 'Поля шаблонов',
                'ordering': ['template', 'key'],
                'unique_together': {('template', 'page', 'key')},
            },
        ),
    ]
